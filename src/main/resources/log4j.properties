#### Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=WARN, stdout, fileOut

# Imprime somente mensagens com 'priority' WARN ou mais alto para o logger
#lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL
#log4j.category.SEU.LOGGER.NAME=WARN

# Explicita a herança do nivel de prioridade
#log4j.category.your.category.name=INHERITED
#### O primeiro appender escreve no console

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern que mostra o nome do arquivo e numero da linha.
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-mm-dd hh:mm:ss}]%6p [%t] (%F:%L) - %m%n

#### O segundo appender escreve em um arquivo
log4j.appender.fileOut=org.apache.log4j.RollingFileAppender
log4j.appender.fileOut.File=aplication.log

# Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=1024KB
# Faz backup dos arquivos de log (apenas 5)
log4j.appender.fileOut.MaxBackupIndex=5
log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
#log4j.appender.fileOut.layout.ConversionPattern=%p %t %c - %m%n
log4j.appender.fileOut.layout.ConversionPattern=[%d{yyyy-mm-dd hh:mm:ss}]%6p [%t] (%c)- %m%n